# auto completion
$UPDATE_COMPLETIONS_ON_KEYPRESS=True #Completions display is evaluated and presented whenever a key is pressed. This avoids the need to press TAB, except to cycle through the possibilities. This currently only affects the prompt-toolkit shell.
$AUTO_SUGGEST_IN_COMPLETIONS=True #Places the auto-suggest result as the first option in the completions. This enables you to tab complete the auto-suggestion.
$XONSH_AUTOPAIR=True #Whether Xonsh will auto-insert matching parentheses, brackets, and quotes. Only available under the prompt-toolkit shell.
$ALIAS_COMPLETIONS_OPTIONS_BY_DEFAULT=True #If True, Argparser based alias completions will show options (e.g. -h, â€¦) without requesting explicitly with option prefix (-).
$COMPLETIONS_CONFIRM=False #While tab-completions menu is displayed, press <Enter> to confirm completion instead of running command. This only affects the prompt-toolkit shell.

# prompt style
$PROMPT = '{BACKGROUND_INTENSE_GREEN}{BLACK}{cwd} {RESET}{INVERT_INTENSE_GREEN}\uE0B0{RESET}{RESET} '

# alias for opening directory or file
def _d(args):
    if !(test -d @(args[0])):
        # directory: enter and list contents
        cd @(args[0] ) && ls
    else:
        # file: edit with nano
        nano @(args[0])
aliases['d'] = _d

# aliases for pacman
aliases['pacman-upgrade'] = 'sudo pacman -Syu; yay -Syu'
aliases['pacman-database'] = 'sudo pacman -Syy'
aliases['pacman-search'] = 'pacman -Ss $arg0; yay -Ss $arg0'
aliases['pacman-cache'] = 'sudo paccache -rk 2'

# aliases for shell scripts
aliases['lpd'] = '~/Dropbox/Code/Shell/duplex_print_CLI.sh'
aliases['replace'] = '~/Dropbox/Code/Shell/replace.py'
